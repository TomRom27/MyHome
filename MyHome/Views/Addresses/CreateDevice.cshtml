@model MyHome.Models.DeviceViewModel

@{
    ViewBag.Title = "Create device";
}

<h2>Nowe urządzenie</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()


    <div class="form-horizontal">
        <h4>@Model.AddressName</h4>
        @Html.HiddenFor(model => model.AddressName) <!-- this way we preserve "read only" property on the model between POSTs -->
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.AddressId)
        <div class="form-group">
            @Html.LabelFor(model => model.DeviceId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeviceId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeviceId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsOn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsOn)
                @Html.ValidationMessageFor(model => model.IsOn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SensorType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.SensorType, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SensorType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Zapisz" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Powrót do listy urządzeń", "Details", new { Model.AddressId })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
